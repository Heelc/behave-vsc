{
	"name": "behave-vsc",
	"displayName": "Behave VSC",
	"contributes": {
		"configuration": {
			"title": "behave-vsc",
			"properties": {
				"behave-vsc.alwaysShowOutput": {
					"type": "boolean",
					"default": false,
					"description": "Default:false (disabled).\nBy default the Behave VSC output window will only show if there is a error/warning in the extension.\nSet true to show the Behave VSC output window on every test run.\nFor multi-root workspaces, set this in your *.code-workspace file.\n",
					"scope": "window"
				},
				"behave-vsc.envVarList": {
					"type": "object",
					"default": "",
					"description": "Optional list of environment variable overrides to use when calling a behave command\nExample: { \"var1\": \"val1\", \"var2\": \"val2\" }'\n(This will apply to all tests within the workspace, i.e. it cannot be varied per test.)\n",
					"scope": "resource"
				},
				"behave-vsc.fastSkipList": {
					"type": "array",
					"default": "",
					"description": "Optional list of fast skip tags that each start with @\nExample: [ \"@skip\", \"@skipped\" ]\nThis setting has no effect when you run all tests at once and runAllAsOne is enabled, (or when debugging).\nThe listed tags stop behave being called for features/scenarios marked with those tags.\nOnly useful if you have a lot of tests tagged to skip and either/both (a) runAllAsOne is disabled, or (b) you have grouped your tests into subfolders and run a folder.\n",
					"scope": "resource"
				},
				"behave-vsc.featuresPath": {
					"type": "string",
					"default": "features",
					"description": "Default:'features'.\nOptional setting for workspace-RELATIVE features subfolder.\nExample: mysubfolder/my_behave_tests\nIf not set to features, then this must tie up with the \"paths=\" setting in your behave configuration file.\n",
					"scope": "resource"
				},
				"behave-vsc.justMyCode": {
					"type": "boolean",
					"default": true,
					"description": "Default:true (enabled).\nControls whether to step into external code when debugging a behave test.\n",
					"scope": "resource"
				},
				"behave-vsc.multiRootRunWorkspacesInParallel": {
					"type": "boolean",
					"default": true,
					"description": "Default:true (enabled).\nFor multi-root workspaces, when behave tests are run from multiple workspaces, run those tests at the same time.\nThis setting should be in your *.code-workspace file.\n",
					"scope": "window"
				},
				"behave-vsc.runAllAsOne": {
					"type": "boolean",
					"default": true,
					"description": "Default:true (enabled).\nWhen running all tests, use a single 'python -m behave'.\nRecommended to keep this enabled unless either/both (a) you can enable runParallel or (b) you are using fastSkipList with a lot of tests.\nNote that running running a sub-selection of tests vs one-shot run all may give different results, i.e. highlight issues with test isolation.\n",
					"scope": "resource"
				},
				"behave-vsc.runParallel": {
					"type": "boolean",
					"default": false,
					"description": "Default:false (disabled).\nRun tests in async mode.\nThis setting has no effect when you are running all tests at once and runAllAsOne is enabled.\nLeave this off for your initial run, then enable if you wish and your test setup supports it (i.e. your tests are fully isolated).\nIf you can enable this setting, you may also wish to disable runAllAsOne so that running all tests (not just selected/grouped tests) will use runParallel.\nNote that behave itself does not have in-built parallel testing - enabling this setting will create multiple behave instances, so in the case of running all tests, it may or may not be faster due to the overhead of starting multiple processes. It depends on a lot of factors, for example, slow tests are likely to run faster because they can execute at the same time, but fast tests might be slower due to the overhead.\n",
					"scope": "resource"
				},
				"behave-vsc.showConfigurationWarnings": {
					"type": "boolean",
					"default": true,
					"description": "Default:true (enabled).\nSet to false to stop the Behave VSC output window being displayed (and outputting warnings) when there are warnings about configuration settings.\nFor multi-root workspaces, set this in your *.code-workspace file.\n",
					"scope": "window"
				},
				"behave-vsc.logDiagnostics": {
					"type": "boolean",
					"default": false,
					"description": "Default:false (disabled).\nSet to true to enable stack traces on errors and log diagnostics in console, viewable via vscode command 'Developer: Toggle Developer Tools' (or when debugging the extension itself). This is noisy, and may have a small performance impact.\n",
					"scope": "window"
				}
			}
		},
		"commands": [
			{
				"command": "behave-vsc.gotoStep",
				"title": "Go to Step Definition"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "!isInEmbeddedEditor && editorTextFocus && resourceExtname =~ /\\.feature$/",
					"command": "behave-vsc.gotoStep",
					"group": "navigation"
				}
			]
		}
	},
	"description": "Debug and Run Behave tests from Sidebar or Feature file",
	"version": "0.3.0",
	"icon": "images/behave-vsc.png",
	"galleryBanner": {
		"color": "#2B2B2B",
		"theme": "dark"
	},
	"publisher": "jimasp",
	"private": true,
	"license": "SEE LICENSE IN LICENSE.txt",
	"homepage": "https://github.com/jimasp/behave-vsc/blob/main/README.md",
	"bugs": {
		"url": "https://github.com/jimasp/behave-vsc/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/jimasp/behave-vsc.git"
	},
	"engines": {
		"vscode": "^1.67.1"
	},
	"categories": [
		"Testing",
		"Debuggers"
	],
	"keywords": [
		"behave",
		"feature",
		"debug",
		"python",
		"multi-root ready"
	],
	"qna": false,
	"extensionDependencies": [
		"ms-python.python"
	],
	"activationEvents": [
		"workspaceContains:**/*.feature"
	],
	"main": "./dist/extension.js",
	"scripts": {
		"prevscode:prepublish": "npm run test",
		"vscode:prepublish": "npm run package",
		"compile": "npm run clean-output && webpack",
		"watch": "npm run clean-output && webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTestSuites.js --stable",
		"pretest": "npm run compile && npm run compile-tests && npm run lint",
		"pretestinsiders": "npm run pretest",
		"testinsiders": "node ./out/test/runTestSuites.js --insiders",
		"rimraf": "./node_modules/rimraf/bin.js",
		"clean-output": "rimraf out/ dist/"
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/mocha": "^9.0.0",
		"@types/node": "17.x",
		"@types/vscode": "^1.63.0",
		"@types/xml2js": "^0.4.11",
		"@typescript-eslint/eslint-plugin": "^5.9.0",
		"@typescript-eslint/parser": "^5.9.0",
		"@vscode/test-electron": "^2.1.3",
		"eslint": "^8.6.0",
		"glob": "^7.1.7",
		"mocha": "^9.1.3",
		"rimraf": "^3.0.2",
		"ts-loader": "^9.2.5",
		"typescript": "^4.5.5",
		"webpack": "^5.52.1",
		"webpack-cli": "^4.8.0"
	},
	"dependencies": {
		"xml2js": "^0.4.23"
	}
}