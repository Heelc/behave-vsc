{
	"name": "behave-vsc",
	"displayName": "Behave VSC",
	"contributes": {
		"configuration": {
			"title": "behave-vsc",
			"properties": {
				"behave-vsc.envVarList": {
					"type": "object",
					"default": {},
					"description": "Optional list of environment variable overrides to use when calling a behave command. Example: { \"var1\": \"val1\", \"var2\": \"val2\" }. This will apply to all tests within the workspace, i.e. it cannot be varied per test.",
					"scope": "resource"
				},
				"behave-vsc.fastSkipList": {
					"type": "array",
					"default": [],
					"description": "Optional list of fast skip tags that each start with @. Example: [ \"@skip\", \"@skipped\" ]. This setting has no effect when you run all tests at once and runAllAsOne is enabled (or when debugging). The listed tags stop behave being called for features/scenarios marked with those tags. Only useful if you have a lot of tests tagged to skip and either/both (a) runAllAsOne is disabled, or (b) you have grouped your tests into subfolders and run a folder.",
					"scope": "resource"
				},
				"behave-vsc.featuresPath": {
					"type": "string",
					"default": "features",
					"description": "Optional setting for workspace-RELATIVE features subfolder. Example: \"mysubfolder/my_behave_tests\". If not set to \"features\", then this must tie up with the \"paths=\" setting in your behave configuration file.",
					"scope": "resource"
				},
				"behave-vsc.justMyCode": {
					"type": "boolean",
					"default": true,
					"description": "If false, then the debugger will step into external code when debugging a behave test.",
					"scope": "resource"
				},
				"behave-vsc.multiRootRunWorkspacesInParallel": {
					"type": "boolean",
					"default": true,
					"description": "For multi-root workspaces only. If true, and behave tests are run from more than one workspace, then behave tests from those workspaces are run at the same time. This setting should be in your *.code-workspace file.",
					"scope": "window"
				},
				"behave-vsc.runAllAsOne": {
					"type": "boolean",
					"default": true,
					"description": "If true, then a single \"python -m behave\" will be used when running all tests. Recommended to keep this enabled (true) unless either/both (a) you can enable runParallel or (b) you are using fastSkipList with a lot of tests. Note that running running a sub-selection of tests vs one-shot run all may give different results, i.e. highlight issues with test isolation.",
					"scope": "resource"
				},
				"behave-vsc.runParallel": {
					"type": "boolean",
					"default": false,
					"description": "If true, then tests are run in async mode. This setting has no effect when runAllAsOne is true and you are running all tests at once. Leave this off for your initial run, then enable if you wish and your test setup supports it (i.e. your tests are fully isolated). If you can enable this setting, you may also wish to disable runAllAsOne so that running all tests (not just selected/grouped tests) will use runParallel. Note that behave itself does not have in-built parallel testing - enabling this setting will create multiple behave instances, so in the case of running all tests, it may or may not be faster due to the overhead of starting multiple processes.",
					"scope": "resource"
				},
				"behave-vsc.showSettingsWarnings": {
					"type": "boolean",
					"default": true,
					"description": "If true, the Behave VSC output window outputs warnings about configuration settings. For multi-root workspaces, you may wish to set this in your *.code-workspace file.",
					"scope": "window"
				},
				"behave-vsc.logDiagnostics": {
					"type": "boolean",
					"default": false,
					"description": "If true, then errors will have stack traces and diagnostics will be logged in console. The console output is viewable via the vscode command 'Developer: Toggle Developer Tools' (or when debugging the extension itself). Diagnostic logs are noisy, and may have a small performance impact.",
					"scope": "window"
				}
			}
		},
		"commands": [
			{
				"command": "behave-vsc.gotoStep",
				"title": "Go to Step Definition"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "!isInEmbeddedEditor && editorTextFocus && resourceExtname =~ /\\.feature$/",
					"command": "behave-vsc.gotoStep",
					"group": "navigation"
				}
			]
		}
	},
	"description": "Debug and Run Behave tests from Sidebar or Feature file",
	"version": "0.3.0",
	"icon": "images/behave-vsc.png",
	"galleryBanner": {
		"color": "#2B2B2B",
		"theme": "dark"
	},
	"publisher": "jimasp",
	"private": true,
	"license": "SEE LICENSE IN LICENSE.txt",
	"homepage": "https://github.com/jimasp/behave-vsc/blob/main/README.md",
	"bugs": {
		"url": "https://github.com/jimasp/behave-vsc/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/jimasp/behave-vsc.git"
	},
	"engines": {
		"vscode": "^1.67.1"
	},
	"categories": [
		"Testing",
		"Debuggers"
	],
	"keywords": [
		"behave",
		"feature",
		"debug",
		"python",
		"multi-root ready"
	],
	"qna": false,
	"extensionDependencies": [
		"ms-python.python"
	],
	"activationEvents": [
		"workspaceContains:**/*.feature"
	],
	"main": "./dist/extension.js",
	"scripts": {
		"prevscode:prepublish": "npm run test",
		"vscode:prepublish": "npm run package",
		"compile": "npm run clean-output && webpack",
		"watch": "npm run clean-output && webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTestSuites.js --stable",
		"pretest": "npm run compile && npm run compile-tests && npm run lint",
		"pretestinsiders": "npm run pretest",
		"testinsiders": "node ./out/test/runTestSuites.js --insiders",
		"rimraf": "./node_modules/rimraf/bin.js",
		"clean-output": "rimraf out/ dist/"
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/mocha": "^9.0.0",
		"@types/node": "17.x",
		"@types/vscode": "^1.63.0",
		"@types/xml2js": "^0.4.11",
		"@typescript-eslint/eslint-plugin": "^5.9.0",
		"@typescript-eslint/parser": "^5.9.0",
		"@vscode/test-electron": "^2.1.3",
		"eslint": "^8.6.0",
		"glob": "^7.1.7",
		"mocha": "^9.1.3",
		"rimraf": "^3.0.2",
		"ts-loader": "^9.2.5",
		"typescript": "^4.5.5",
		"webpack": "^5.52.1",
		"webpack-cli": "^4.8.0"
	},
	"dependencies": {
		"xml2js": "^0.4.23"
	}
}