{
	"name": "behave-vsc",
	"displayName": "Behave VSC",
	"contributes": {
		"configuration": {
			"title": "behave-vsc",
			"properties": {
				"behave-vsc.envVarList": {
					"type": "string",
					"default": "",
					"description": "behave-vsc.fastSkipList is deprecated: Please use behave-vsc.envVarOverrides instead.",
					"markdownDeprecationMessage": "**Deprecated**: Please use `#behave-vsc.envVarOverrides#` instead.",
					"deprecationMessage": "behave-vsc.fastSkipList is deprecated: Please use behave-vsc.envVarOverrides instead."
				},
				"behave-vsc.fastSkipList": {
					"type": "string",
					"default": "",
					"description": "behave-vsc.fastSkipList is deprecated: Please use behave-vsc.fastSkipStrings instead.",
					"markdownDeprecationMessage": "**Deprecated**: Please use `#behave-vsc.fastSkipStrings#` instead.",
					"deprecationMessage": "behave-vsc.fastSkipList is deprecated: Please use behave-vsc.fastSkipStrings instead."
				},
				"behave-vsc.envVarOverrides": {
					"scope": "resource",
					"type": "object",
					"markdownDescription": "Optional key-value pairs of environment variable overrides to use when calling a behave command. This will apply to all behave tests within the workspace.",
					"additionalProperties": {
						"type": "string"
					}
				},
				"behave-vsc.fastSkipStrings": {
					"scope": "resource",
					"type": "array",
					"markdownDescription": "Optional array list of fast skip tags that each start with `@`. The listed tags stop behave being called for features/scenarios marked with those tags. This setting has no effect when you run all tests at once and `#behave-vsc.runAllAsOne#` is enabled (or when debugging).",
					"items": {
						"type": "string",
						"pattern": "@.+"
					}
				},
				"behave-vsc.featuresPath": {
					"scope": "resource",
					"type": "string",
					"markdownDescription": "*workspace-relative* path to the features subfolder. If not `features` (the default), then this must tie up with the `\"paths=\"` setting in your behave configuration file. Example: `mysubfolder/my_behave_tests`.",
					"default": "features"
				},
				"behave-vsc.justMyCode": {
					"scope": "resource",
					"type": "boolean",
					"markdownDescription": "If set to false (disabled), the debugger will step into external code when debugging a behave test.",
					"default": true
				},
				"behave-vsc.multiRootRunWorkspacesInParallel": {
					"scope": "window",
					"type": "boolean",
					"markdownDescription": "For multi-root workspaces only. If enabled, then when behave tests are run from more than one workspace, behave tests from those workspaces are run at the same time. This setting should be in your `*.code-workspace` file.",
					"default": true
				},
				"behave-vsc.runAllAsOne": {
					"scope": "resource",
					"type": "boolean",
					"markdownDescription": "Specifies whether a single call to behave (i.e. `python -m behave`) will be used when running *all* behave tests. Recommended to keep this enabled unless you can enable `#behave-vsc.runParallel#`. Note that running a selection of tests vs one-shot `python -m behave` of all tests may give different results, i.e. highlight issues with test isolation.",
					"default": true
				},
				"behave-vsc.runParallel": {
					"scope": "resource",
					"type": "boolean",
					"markdownDescription": "Specifies whether behave tests run in async mode. Enabling this setting will create multiple behave instances. Leave this off for your initial run, then enable if you wish and your test setup supports it (i.e. your tests are fully isolated). If you enable this setting, you may wish to disable `#behave-vsc.runAllAsOne#` so running all tests (not just selected/grouped tests) will use runParallel.",
					"default": false
				},
				"behave-vsc.showSettingsWarnings": {
					"scope": "window",
					"type": "boolean",
					"markdownDescription": "Specifies whether the Behave VSC output window displays warnings about configuration settings. For multi-root workspaces, you may wish to set this in your `*.code-workspace` file.",
					"default": true
				},
				"behave-vsc.xRay": {
					"scope": "window",
					"type": "boolean",
					"markdownDescription": "Specifies whether extension errors have stack traces and diagnostics are logged in console. The console output is viewable via the vscode command `Developer: Toggle Developer Tools`. Diagnostic logs are noisy, and may have a small performance impact.",
					"default": false
				}
			}
		},
		"commands": [
			{
				"command": "behave-vsc.gotoStep",
				"title": "Go to Step Definition"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "!isInEmbeddedEditor && editorTextFocus && resourceExtname =~ /\\.feature$/",
					"command": "behave-vsc.gotoStep",
					"group": "navigation"
				}
			]
		}
	},
	"description": "Debug and Run Behave tests from Sidebar or Feature file",
	"version": "0.3.0",
	"icon": "images/behave-vsc.png",
	"galleryBanner": {
		"color": "#2B2B2B",
		"theme": "dark"
	},
	"publisher": "jimasp",
	"private": true,
	"license": "SEE LICENSE IN LICENSE.txt",
	"homepage": "https://github.com/jimasp/behave-vsc/blob/main/README.md",
	"bugs": {
		"url": "https://github.com/jimasp/behave-vsc/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/jimasp/behave-vsc.git"
	},
	"engines": {
		"vscode": "^1.67.1"
	},
	"categories": [
		"Testing",
		"Debuggers"
	],
	"keywords": [
		"behave",
		"feature",
		"debug",
		"python",
		"multi-root ready"
	],
	"qna": false,
	"extensionDependencies": [
		"ms-python.python"
	],
	"activationEvents": [
		"workspaceContains:**/*.feature"
	],
	"main": "./dist/extension.js",
	"scripts": {
		"prevscode:prepublish": "npm run test",
		"vscode:prepublish": "npm run package",
		"compile": "npm run clean-output && webpack",
		"watch": "npm run clean-output && webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTestSuites.js --stable",
		"pretest": "npm run compile && npm run compile-tests && npm run lint",
		"pretestinsiders": "npm run pretest",
		"testinsiders": "node ./out/test/runTestSuites.js --insiders",
		"rimraf": "./node_modules/rimraf/bin.js",
		"clean-output": "rimraf out/ dist/"
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/mocha": "^9.0.0",
		"@types/node": "17.x",
		"@types/vscode": "^1.63.0",
		"@types/xml2js": "^0.4.11",
		"@typescript-eslint/eslint-plugin": "^5.9.0",
		"@typescript-eslint/parser": "^5.9.0",
		"@vscode/test-electron": "^2.1.3",
		"eslint": "^8.6.0",
		"glob": "^7.1.7",
		"mocha": "^9.1.3",
		"rimraf": "^3.0.2",
		"ts-loader": "^9.2.5",
		"typescript": "^4.5.5",
		"webpack": "^5.52.1",
		"webpack-cli": "^4.8.0"
	},
	"dependencies": {
		"xml2js": "^0.4.23"
	}
}